# Adapted from https://github.com/LKlinke/Prodigy/blob/main/pgfexamples/inference/monty_hall_nested.pgcl

prize ~ UniformDisc(1,4);
player ~ UniformDisc(1,4);

normalize prize player {
  door ~ UniformDisc(1,4);
  observe(not (prize = door || player = door));
}

normalize prize player {
  switch ~ UniformDisc(1,4);
  observe(not (switch = player || switch = door));
}

player := switch;
switch := 0;

if player = prize {
  win := 1;
} else {
  win := 0;
}

return win;

#= Original code:

nat prize;
nat player;
nat door;
nat switch;

prize := unif(1,3);
player := unif(1,3);
query {
  door := unif(1,3);
  observe(not (prize = door || player = door))
}
// switch?
query {
  switch := unif(1,3);
  observe(not (switch = player || switch = door));
}
player := switch
switch := 0
?Pr[player = prize]

=#