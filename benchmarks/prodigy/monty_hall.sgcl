# Adapted from https://github.com/LKlinke/Prodigy/blob/main/pgfexamples/inference/monty_hall.pgcl

prize ~ UniformDisc(0,3);
player ~ UniformDisc(0,3);

if (player=0) {
  if (prize = 0) {
    opendoor ~ UniformDisc(1,3);
  } else {
      if (prize = 1) {
        opendoor := 2;
      } else {
        opendoor := 1;
      }
  }
} else {
    if (player=1) {
      if (prize = 0) {
        opendoor := 2;
      } else {
          if (prize = 1) {
            if 0 ~ Bernoulli(1/2) {
                opendoor := 0;
            } else {
                opendoor := 2;
            }
          } else {
            opendoor := 0;
          }
      }
    } else {
        if (prize = 0) {
            opendoor := 1;
        } else {
            if (prize = 1) {
                opendoor := 0;
            } else {
                if 0 ~ Bernoulli(1/2) {
                    opendoor := 0;
                } else {
                    opendoor := 1;
                }
            }
        }
    }
}

if (opendoor = 0){
    if (player = 1){
        otherdoor := 2;
    } else {
        otherdoor := 1;
    }
} else {
    if (opendoor = 1){
        if (player = 0){
            otherdoor := 2;
        } else {
            otherdoor := 0;
        }
    } else {
        if (opendoor = 2){
            if (player = 0){
                otherdoor := 1;
            } else {
                otherdoor := 0;
            }
        }
    }
}

result := 0;
if player = prize {
    result := 1;
} else if otherdoor = prize {
    result := 2;
}

return result;

#= Original code:

nat prize;
nat player;
nat opendoor;
nat otherdoor;

prize := unif(0,2)
player := unif(0,2)

if (player=0) {
  if (prize = 0) {
    opendoor := unif(1,2)
  } else {
      if (prize = 1) {
        opendoor := 2
      } else {
        opendoor := 1
      }
  }
} else {
    if (player=1) {
      if (prize = 0) {
        opendoor := 2
      } else {
          if (prize = 1) {
            {opendoor := 0} [1/2] { opendoor := 2}
          } else {
            opendoor := 0
          }
      }
    } else {
        if (prize = 0) {
            opendoor := 1
        } else {
            if (prize = 1) {
                opendoor := 0
            } else {
                {opendoor := 0} [1/2] { opendoor := 1}
            }
        }
    }
}

if (opendoor = 0){
    if (player = 1){
        otherdoor := 2
    } else {
        otherdoor := 1
    }
} else {
    if (opendoor = 1){
        if (player = 0){
            otherdoor := 2
        } else {
            otherdoor := 0
        }
    } else {
        if (opendoor = 2){
            if (player = 0){
                otherdoor := 1
            } else {
                otherdoor := 0
            }
        } else{skip}
    }
}
?Pr[player = prize]
?Pr[otherdoor = prize]
#!Plot[player, prize, 10]

=#